# Generated by Django 5.1.6 on 2025-06-12 15:44

from django.db import migrations, models


def create_default_proxy_settings(apps, schema_editor):
    """Create the default ProxySettings instance"""
    ProxySettings = apps.get_model("core", "ProxySettings")
    ProxySettings.objects.create(
        id=1,  # Force singleton ID
        buffering_timeout=15,
        buffering_speed=1.0,
        redis_chunk_ttl=60,
        channel_shutdown_delay=0,
        channel_init_grace_period=5,
    )


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0013_default_network_access_settings'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProxySettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buffering_timeout', models.IntegerField(default=15, help_text='Seconds to wait for buffering before switching streams')),
                ('buffering_speed', models.FloatField(default=1.0, help_text='Speed threshold to consider stream buffering (1.0 = normal speed)')),
                ('redis_chunk_ttl', models.IntegerField(default=60, help_text='Time in seconds before Redis chunks expire')),
                ('channel_shutdown_delay', models.IntegerField(default=0, help_text='Seconds to wait after last client before shutting down channel')),
                ('channel_init_grace_period', models.IntegerField(default=5, help_text='Seconds to wait for first client after channel initialization')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Proxy Settings',
                'verbose_name_plural': 'Proxy Settings',
            },
        ),
        migrations.RunPython(create_default_proxy_settings),
    ]
